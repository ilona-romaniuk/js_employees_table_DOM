{"version":3,"sources":["scripts/main.js"],"names":["direction","headlines","document","querySelector","rows","list","listRows","previousClickedTitleIndex","convertToNumber","string","number","Number","replace","addEventListener","e","headline","index","target","closest","cellIndex","sort","a","b","row","cells","textContent","nextRow","test","checkedRow","checkedNextRow","localeCompare","forEach","appendChild","line","tabIndex","classList","add","remove","commonBody","employeeForm","createElement","className","append","innerHTML","selectButton","selectOptions","city","option","Option","value","toLowerCase","firstName","age","position","minNameLength","youngest","oldest","form","addNewEmployee","labels","querySelectorAll","labelsChildren","label","push","children","newRow","child","newCell","name","formatNumberToMoney","capitalizedFirstWordLetter","validInput","re","positionValidation","place","valid","trim","isValue","warningLettersMessage","hidden","nameValidation","givenName","length","nameErrorMessage","ageValidation","input","ageErrorMessage","preventDefault","isNameValid","isAgeValid","isPositionValid","createSuccessNotification","reset","formsCoords","getBoundingClientRect","noteContainer","style","top","height","left","width","ageErrorText","errorTitle","createNotification","nameErrorText","warningMessageTitle","warningMessageText","warningMessage","warningDigitsMessageText","warningDigitsMessage","warningLettersMessageText","nameOfClass","text","titleText","notification","dataset","qa","color","notificationTitle","notificationText","employeeName","newEmployeeName","setTimeout","replaceTextToCellAndRemoveInput","cell","getCellIndex","columnName3","clickedCell","cellsText","clickedCellIndex","inputInsteadOfCell","focus","defineCasesToRejectNewText","ev","code","columnName1","columnName2","columnName4","columnName5","columnName","headTitles","title","toLocaleLowerCase","Intl","NumberFormat","format","word","charAt","toUpperCase","slice","isDigits"],"mappings":"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","file":"main.8aaf40a5.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst headlines = document.querySelector('thead').rows[0];\nconst list = document.querySelector('tbody');\nconst listRows = list.rows;\nlet previousClickedTitleIndex = -1;\nlet direction;\n\n// When users clicks on one of the table headers,\n// table should be sorted in ASC order,\n// the second click sorts it in DESC order.\n\nheadlines.addEventListener('click', (e) => {\n  const headline = e.target.closest('th');\n  const index = headline.cellIndex;\n\n  if (previousClickedTitleIndex !== index) {\n    direction = 1;\n  } else {\n    direction = -1;\n  }\n\n  previousClickedTitleIndex = index;\n\n  if (direction === -1) {\n    previousClickedTitleIndex = -1;\n  }\n\n  [...listRows].sort((a, b) => {\n    const row = a.cells[index].textContent;\n    const nextRow = b.cells[index].textContent;\n\n    if (/\\d/.test(row)) {\n      const checkedRow = convertToNumber(row);\n      const checkedNextRow = convertToNumber(nextRow);\n\n      return (Number(checkedRow) - Number(checkedNextRow)) * direction;\n    }\n\n    return row.localeCompare(nextRow) * direction;\n  }).forEach(row => list.appendChild(row));\n});\n\nfunction convertToNumber(string) {\n  const number = Number(string.replace(/[$,]/g, ''));\n\n  return `${number}`;\n};\n\n// Use 'active' class for table row to indicate it is selected.\n\n[...listRows].forEach((line) => {\n  line.tabIndex = 0;\n\n  line.addEventListener('focus', (e) => {\n    line.classList.add('active');\n  });\n\n  line.addEventListener('blur', (e) => {\n    line.classList.remove('active');\n  });\n});\n\nconst commonBody = document.querySelector('body');\nconst employeeForm = document.createElement('form');\n\nemployeeForm.className = `new-employee-form`;\ncommonBody.append(employeeForm);\n\n// script to add a form to the document\n\nemployeeForm.innerHTML = `\n  <label>\n    Name:\n    <input\n      name=\"name\"\n      type=\"text\"\n      data-qa=\"name\"\n      required\n    >\n  </label>\n\n  <label>\n    Position:\n    <input\n      name=\"position\"\n      type=\"text\"\n      data-qa=\"position\"\n      required\n    >\n  </label>\n\n  <label>\n    Office:\n    <select\n      name=\"office\"\n      data-qa=\"office\"\n      required\n    ></select>\n  </label>\n\n  <label>\n    Age:\n    <input\n      name=\"age\"\n      type=\"number\"\n      data-qa=\"age\"\n      required\n    >\n  </label>\n\n  <label>\n    Salary:\n    <input\n      name=\"salary\"\n      type=\"number\"\n      data-qa=\"salary\"\n      required\n    >\n  </label>\n\n  <button>Save to Table</button>\n`;\n\nconst selectButton = document.querySelector('select');\nconst selectOptions\n  = [`Tokyo`, `Singapore`, `London`, `New York`, `Edinburgh`, `San Francisco`];\n\nfor (const city of selectOptions) {\n  const option = new Option(`${city}`);\n\n  option.value = city.toLowerCase();\n\n  selectButton.append(option);\n}\n\nconst firstName = document.querySelector('[name=\"name\"]');\nconst age = document.querySelector('[name=\"age\"]');\nconst position = document.querySelector('[name=\"position\"]');\n\nconst minNameLength = 4;\nconst youngest = 18;\nconst oldest = 90;\n\nconst form = document.querySelector('form');\n\nfunction addNewEmployee() {\n  const labels = form.querySelectorAll('label');\n  const labelsChildren = [];\n\n  [...labels].forEach(label => {\n    labelsChildren.push(label.children[0]);\n  });\n\n  const newRow = document.createElement('tr');\n\n  [...labelsChildren].forEach(child => {\n    const newCell = document.createElement('td');\n\n    if (child.name === 'salary') {\n      newCell.textContent = `$${formatNumberToMoney(child)}`;\n    } else {\n      newCell.textContent = capitalizedFirstWordLetter(child);\n    }\n\n    newRow.appendChild(newCell);\n  });\n\n  newRow.tabIndex = 0;\n\n  newRow.addEventListener('focus', (e) => {\n    newRow.classList.add('active');\n  });\n\n  newRow.addEventListener('blur', (e) => {\n    newRow.classList.remove('active');\n  });\n\n  return list.appendChild(newRow);\n}\n\nconst validInput = (value) => {\n  const re = /^[a-zA-Z]+( [a-zA-Z]+){0,}$/;\n\n  return re.test(value);\n};\n\nconst positionValidation = (place) => {\n  let valid = false;\n  const value = place.value.trim();\n\n  if (!isValue(value) || !validInput(value)) {\n    warningLettersMessage.hidden = false;\n  } else {\n    warningLettersMessage.hidden = true;\n    valid = true;\n  }\n\n  return valid;\n};\n\nconst nameValidation = (givenName) => {\n  let valid = false;\n  const value = givenName.value.trim();\n\n  if (value.length < minNameLength || !validInput(value)) {\n    nameErrorMessage.hidden = false;\n  } else {\n    nameErrorMessage.hidden = true;\n    valid = true;\n  }\n\n  return valid;\n};\n\nconst ageValidation = (input) => {\n  let valid = false;\n\n  if (input.value < youngest || input.value > oldest) {\n    ageErrorMessage.hidden = false;\n  } else {\n    valid = true;\n    ageErrorMessage.hidden = true;\n  }\n\n  return valid;\n};\n\nemployeeForm.addEventListener('submit', function(e) {\n  e.preventDefault();\n\n  const isNameValid = nameValidation(firstName);\n  const isAgeValid = ageValidation(age);\n  const isPositionValid = positionValidation(position);\n\n  const isFormValid = isNameValid && isAgeValid && isPositionValid;\n\n  if (isFormValid) {\n    addNewEmployee();\n    createSuccessNotification(firstName);\n    employeeForm.reset();\n  }\n});\n\nconst formsCoords = employeeForm.getBoundingClientRect();\n\nconst noteContainer = document.createElement('div');\n\nemployeeForm.append(noteContainer);\n\nnoteContainer.style.position = 'absolute';\nnoteContainer.style.top = `${formsCoords.height}px`;\nnoteContainer.style.left = 0;\nnoteContainer.style.width = 'max-content';\n\nconst ageErrorText\n  = 'Employees younger than 18 y.o and older than 90 y.o. are not allowed';\nconst errorTitle = 'Error';\nconst ageErrorMessage = createNotification('error', ageErrorText, errorTitle);\n\nconst nameErrorText\n  = 'Field `Name` allows to enter only letters and not less than 4';\nconst nameErrorMessage = createNotification('error', nameErrorText, errorTitle);\n\nconst warningMessageTitle = 'Warning';\nconst warningMessageText = 'No new data were entered';\nconst warningMessage\n  = createNotification('warning', warningMessageText, warningMessageTitle);\n\nconst warningDigitsMessageText\n  = 'Only digits are allowed to enter in this cell';\nconst warningDigitsMessage = createNotification(\n  'warning',\n  warningDigitsMessageText,\n  warningMessageTitle);\n\nconst warningLettersMessageText = 'Fill the field please with letters only';\nconst warningLettersMessage = createNotification(\n  'warning',\n  warningLettersMessageText,\n  warningMessageTitle);\n\nfunction createNotification(nameOfClass, text, titleText) {\n  const notification = document.createElement('div');\n\n  notification.className = 'notification';\n  notification.dataset.qa = 'notification';\n\n  notification.classList.add(`${nameOfClass}`);\n  notification.style.position = 'static';\n  notification.style.color = 'white';\n\n  const notificationTitle = document.createElement('p');\n  const notificationText = document.createElement('p');\n\n  notificationTitle.className = 'title';\n  notificationTitle.textContent = `${titleText}`;\n  notificationText.textContent = `${text}`;\n  notification.appendChild(notificationTitle);\n  notification.appendChild(notificationText);\n\n  notification.hidden = true;\n\n  noteContainer.appendChild(notification);\n\n  return notification;\n}\n\nfunction createSuccessNotification(employeeName) {\n  const newEmployeeName = employeeName.value;\n  const notification = document.createElement('div');\n\n  notification.className = 'notification';\n  notification.dataset.qa = 'notification';\n\n  notification.classList.add('success');\n  notification.style.position = 'static';\n  notification.style.color = 'white';\n\n  const notificationTitle = document.createElement('p');\n  const notificationText = document.createElement('p');\n\n  notificationTitle.className = 'title';\n  notificationTitle.textContent = 'Accepted';\n\n  notificationText.textContent\n    = `New employe ${newEmployeeName} is successfully added`;\n  notification.appendChild(notificationTitle);\n  notification.appendChild(notificationText);\n\n  noteContainer.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 5000);\n\n  return notification;\n}\n\n// Implement editing of table cells by double-clicking on it\n\nlist.addEventListener('dblclick', (e) => {\n  const clickedCell = e.target.closest('td');\n  const cellsText = clickedCell.textContent;\n\n  if (!clickedCell) {\n    return;\n  }\n\n  const clickedCellIndex = list.rows[0].cells[clickedCell.cellIndex].cellIndex;\n  const inputInsteadOfCell = document.createElement('input');\n\n  inputInsteadOfCell.classList.add('cell-input');\n  clickedCell.textContent = '';\n  clickedCell.appendChild(inputInsteadOfCell);\n  inputInsteadOfCell.focus();\n\n  inputInsteadOfCell.addEventListener('blur', () => {\n    defineCasesToRejectNewText(\n      clickedCell,\n      clickedCellIndex,\n      cellsText,\n      inputInsteadOfCell);\n  });\n\n  inputInsteadOfCell.addEventListener('keydown', (ev) => {\n    if (ev.code !== 'Enter') {\n      return;\n    }\n\n    defineCasesToRejectNewText(\n      clickedCell,\n      clickedCellIndex,\n      cellsText,\n      inputInsteadOfCell);\n  });\n});\n\nfunction replaceTextToCellAndRemoveInput(cell, input, text) {\n  if (input.value) {\n    cell.textContent\n    = list.rows[0].cells[cell.cellIndex].cellIndex === getCellIndex(columnName3)\n        ? `$${formatNumberToMoney(input)}`\n        : capitalizedFirstWordLetter(input);\n  } else {\n    cell.textContent = text;\n  }\n\n  input.remove();\n}\n\nconst columnName1 = 'age';\nconst columnName2 = 'name';\nconst columnName3 = 'salary';\nconst columnName4 = 'position';\nconst columnName5 = 'office';\n\nfunction getCellIndex(columnName) {\n  const headTitles = headlines.cells;\n\n  for (const title of headTitles) {\n    if (title.textContent.toLowerCase() === columnName.toLocaleLowerCase()) {\n      return title.cellIndex;\n    }\n  }\n}\n\nfunction formatNumberToMoney(input) {\n  const number = new Intl.NumberFormat('en-IN').format(input.value);\n\n  return number;\n}\n\nfunction capitalizedFirstWordLetter(input) {\n  const word = input.value.trim();\n\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}\n\nconst isValue = value => value !== '';\nconst isDigits = (value) => {\n  const re = /^[0-9]+$/;\n\n  return re.test(value);\n};\n\nfunction defineCasesToRejectNewText(cell, index, text, input) {\n  const value = input.value.trim();\n\n  switch (true) {\n    case !isValue(value):\n      cell.textContent = text;\n      warningMessage.hidden = false;\n\n      setTimeout(() => {\n        warningMessage.hidden = true;\n      }, 2000);\n      break;\n\n    case (index === getCellIndex(columnName3) && !isDigits(value)):\n      cell.textContent = text;\n      warningDigitsMessage.hidden = false;\n\n      setTimeout(() => {\n        warningDigitsMessage.hidden = true;\n      }, 4000);\n      break;\n\n    case (index === getCellIndex(columnName1) && !isDigits(value)):\n      cell.textContent = text;\n      warningDigitsMessage.hidden = false;\n\n      setTimeout(() => {\n        warningDigitsMessage.hidden = true;\n      }, 4000);\n      break;\n\n    case (index === getCellIndex(columnName1) && !ageValidation(input)):\n      cell.textContent = text;\n\n      setTimeout(() => {\n        ageErrorMessage.hidden = true;\n      }, 5000);\n      break;\n\n    case (index === getCellIndex(columnName2) && !nameValidation(input)):\n      cell.textContent = text;\n\n      setTimeout(() => {\n        nameErrorMessage.hidden = true;\n      }, 5000);\n      break;\n\n    case (index === getCellIndex(columnName4) && !validInput(value)):\n      cell.textContent = text;\n      warningLettersMessage.hidden = false;\n\n      setTimeout(() => {\n        warningLettersMessage.hidden = true;\n      }, 3000);\n      break;\n\n    case (index === getCellIndex(columnName5) && !validInput(value)):\n      cell.textContent = text;\n      warningLettersMessage.hidden = false;\n\n      setTimeout(() => {\n        warningLettersMessage.hidden = true;\n      }, 3000);\n      break;\n\n    default:\n      replaceTextToCellAndRemoveInput(cell, input, text);\n  }\n};\n"]}